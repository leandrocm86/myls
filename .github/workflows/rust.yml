name: Build and Release

on:
  workflow_dispatch:
    inputs:
      notes:
        description: "Release notes/description"
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-musl, aarch64-unknown-linux-gnu]

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross (for non-native targets)
        run: cargo install cross

      - name: Build binary
        run: |
          if [ "${{ matrix.target }}" = "x86_64-unknown-linux-musl" ]; then
            cargo build --release --target ${{ matrix.target }}
          else
            cross build --release --target ${{ matrix.target }}
          fi

      - name: Rename binary
        run: |
          BIN="myls"
          OUT="myls-${{ matrix.target }}"
          cp target/${{ matrix.target }}/release/$BIN $OUT
          echo "out=$OUT" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.out }}
          path: ${{ env.out }}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Download all built artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist

      - name: Get version from Cargo.toml
        id: cargo_version
        run: |
          VERSION=$(grep '^version' Cargo.toml | head -1 | sed -E 's/version\s*=\s*"(.*)"/\1/')
          echo "version=v$VERSION" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.version }}
          name: ${{ env.version }}
          body: ${{ github.event.inputs.notes }}
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
